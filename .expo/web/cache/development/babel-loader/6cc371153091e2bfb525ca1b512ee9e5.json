{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport { RestaurantsScreen } from \"./src/features/restaurants/screens/restaurant.screen\";\nimport { ThemeProvider } from \"styled-components/native\";\nimport { theme } from \"./src/infrastructure/theme\";\nimport { useFonts as useOswald, Oswald_400Regular } from \"@expo-google-fonts/oswald\";\nimport { useFonts as useLato, Lato_400Regular } from \"@expo-google-fonts/lato\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { SafeArea } from \"./src/components/utility/safe-area.component\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { RestaurantContextProvider } from \"./src/services/restaurants/restaurants.context\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TAB_ICONS = {\n  Restaurants: \"md-restaurant\",\n  Settings: \"md-settings\",\n  Maps: \"md-map\"\n};\nvar MapsScreen = function MapsScreen() {\n  return _jsx(SafeArea, {\n    children: _jsx(Text, {\n      children: \"Mpas screen\"\n    })\n  });\n};\nvar SettingsScreen = function SettingsScreen() {\n  return _jsx(SafeArea, {\n    children: _jsx(Text, {\n      children: \"settings screen\"\n    })\n  });\n};\nvar createScreenOptions = function createScreenOptions(_ref) {\n  var route = _ref.route;\n  return {\n    tabBarIcon: function tabBarIcon(_ref2) {\n      var color = _ref2.color,\n        size = _ref2.size;\n      return _jsx(Ionicons, {\n        name: TAB_ICONS[route.name],\n        size: size,\n        color: color\n      });\n    },\n    tabBarActiveTintColor: \"tomato\",\n    tabBarInactiveTintColor: \"gray\"\n  };\n};\nexport default function App() {\n  var _useLato = useLato({\n      Lato_400Regular: Lato_400Regular\n    }),\n    _useLato2 = _slicedToArray(_useLato, 1),\n    latoLoaded = _useLato2[0];\n  var _useOswald = useOswald({\n      Oswald_400Regular: Oswald_400Regular\n    }),\n    _useOswald2 = _slicedToArray(_useOswald, 1),\n    oswaldLoaded = _useOswald2[0];\n  if (!oswaldLoaded || !latoLoaded) {\n    return null;\n  }\n  var Tab = createBottomTabNavigator();\n  return _jsx(ThemeProvider, {\n    theme: theme,\n    children: _jsx(RestaurantContextProvider, {\n      children: _jsx(NavigationContainer, {\n        children: _jsxs(Tab.Navigator, {\n          screenOptions: createScreenOptions,\n          children: [_jsx(Tab.Screen, {\n            name: \"Restaurants\",\n            component: RestaurantsScreen\n          }), _jsx(Tab.Screen, {\n            name: \"Maps\",\n            component: MapsScreen\n          }), _jsx(Tab.Screen, {\n            name: \"Settings\",\n            component: SettingsScreen\n          })]\n        })\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","RestaurantsScreen","ThemeProvider","theme","useFonts","useOswald","Oswald_400Regular","useLato","Lato_400Regular","NavigationContainer","createBottomTabNavigator","SafeArea","Ionicons","RestaurantContextProvider","TAB_ICONS","Restaurants","Settings","Maps","MapsScreen","SettingsScreen","createScreenOptions","route","tabBarIcon","color","size","name","tabBarActiveTintColor","tabBarInactiveTintColor","App","latoLoaded","oswaldLoaded","Tab"],"sources":["E:/CURSO UDEMY/PARACTICAS CURSOS/MealsToGo/MealsToGo/App.js"],"sourcesContent":["import React from \"react\";\nimport { RestaurantsScreen } from \"./src/features/restaurants/screens/restaurant.screen\";\nimport { ThemeProvider } from \"styled-components/native\";\nimport { theme } from \"./src/infrastructure/theme\";\nimport {\n  useFonts as useOswald,\n  Oswald_400Regular,\n} from \"@expo-google-fonts/oswald\";\nimport { useFonts as useLato, Lato_400Regular } from \"@expo-google-fonts/lato\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { Text, View } from \"react-native\";\nimport { SafeArea } from \"./src/components/utility/safe-area.component\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { RestaurantContextProvider } from \"./src/services/restaurants/restaurants.context\";\n\nconst TAB_ICONS = {\n  Restaurants: \"md-restaurant\",\n  Settings: \"md-settings\",\n  Maps: \"md-map\",\n};\nconst MapsScreen = () => {\n  return (\n    <SafeArea>\n      <Text>Mpas screen</Text>\n    </SafeArea>\n  );\n};\n\nconst SettingsScreen = () => {\n  return (\n    <SafeArea>\n      <Text>settings screen</Text>\n    </SafeArea>\n  );\n};\n\nconst createScreenOptions = ({ route }) => ({\n  tabBarIcon: ({ color, size }) => {\n    return <Ionicons name={TAB_ICONS[route.name]} size={size} color={color} />;\n  },\n  tabBarActiveTintColor: \"tomato\",\n  tabBarInactiveTintColor: \"gray\",\n});\n\nexport default function App() {\n  let [latoLoaded] = useLato({\n    Lato_400Regular,\n  });\n  let [oswaldLoaded] = useOswald({\n    Oswald_400Regular,\n  });\n  if (!oswaldLoaded || !latoLoaded) {\n    return null;\n  }\n\n  const Tab = createBottomTabNavigator();\n  return (\n    <ThemeProvider theme={theme}>\n      <RestaurantContextProvider>\n        <NavigationContainer>\n        <Tab.Navigator screenOptions={createScreenOptions}>\n          <Tab.Screen name=\"Restaurants\" component={RestaurantsScreen} />\n          <Tab.Screen name=\"Maps\" component={MapsScreen} />\n          <Tab.Screen name=\"Settings\" component={SettingsScreen} />\n        </Tab.Navigator>\n      </NavigationContainer>\n      </RestaurantContextProvider>\n    </ThemeProvider>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,iBAAiB;AAC1B,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,KAAK;AACd,SACEC,QAAQ,IAAIC,SAAS,EACrBC,iBAAiB,QACZ,2BAA2B;AAClC,SAASF,QAAQ,IAAIG,OAAO,EAAEC,eAAe,QAAQ,yBAAyB;AAC9E,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,wBAAwB,QAAQ,+BAA+B;AAAC;AAAA;AAEzE,SAASC,QAAQ;AACjB,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,yBAAyB;AAAyD;AAAA;AAE3F,IAAMC,SAAS,GAAG;EAChBC,WAAW,EAAE,eAAe;EAC5BC,QAAQ,EAAE,aAAa;EACvBC,IAAI,EAAE;AACR,CAAC;AACD,IAAMC,UAAU,GAAG,SAAbA,UAAU,GAAS;EACvB,OACE,KAAC,QAAQ;IAAA,UACP,KAAC,IAAI;MAAA;IAAA;EAAmB,EACf;AAEf,CAAC;AAED,IAAMC,cAAc,GAAG,SAAjBA,cAAc,GAAS;EAC3B,OACE,KAAC,QAAQ;IAAA,UACP,KAAC,IAAI;MAAA;IAAA;EAAuB,EACnB;AAEf,CAAC;AAED,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmB;EAAA,IAAMC,KAAK,QAALA,KAAK;EAAA,OAAQ;IAC1CC,UAAU,EAAE,2BAAqB;MAAA,IAAlBC,KAAK,SAALA,KAAK;QAAEC,IAAI,SAAJA,IAAI;MACxB,OAAO,KAAC,QAAQ;QAAC,IAAI,EAAEV,SAAS,CAACO,KAAK,CAACI,IAAI,CAAE;QAAC,IAAI,EAAED,IAAK;QAAC,KAAK,EAAED;MAAM,EAAG;IAC5E,CAAC;IACDG,qBAAqB,EAAE,QAAQ;IAC/BC,uBAAuB,EAAE;EAC3B,CAAC;AAAA,CAAC;AAEF,eAAe,SAASC,GAAG,GAAG;EAC5B,eAAmBrB,OAAO,CAAC;MACzBC,eAAe,EAAfA;IACF,CAAC,CAAC;IAAA;IAFGqB,UAAU;EAGf,iBAAqBxB,SAAS,CAAC;MAC7BC,iBAAiB,EAAjBA;IACF,CAAC,CAAC;IAAA;IAFGwB,YAAY;EAGjB,IAAI,CAACA,YAAY,IAAI,CAACD,UAAU,EAAE;IAChC,OAAO,IAAI;EACb;EAEA,IAAME,GAAG,GAAGrB,wBAAwB,EAAE;EACtC,OACE,KAAC,aAAa;IAAC,KAAK,EAAEP,KAAM;IAAA,UAC1B,KAAC,yBAAyB;MAAA,UACxB,KAAC,mBAAmB;QAAA,UACpB,MAAC,GAAG,CAAC,SAAS;UAAC,aAAa,EAAEiB,mBAAoB;UAAA,WAChD,KAAC,GAAG,CAAC,MAAM;YAAC,IAAI,EAAC,aAAa;YAAC,SAAS,EAAEnB;UAAkB,EAAG,EAC/D,KAAC,GAAG,CAAC,MAAM;YAAC,IAAI,EAAC,MAAM;YAAC,SAAS,EAAEiB;UAAW,EAAG,EACjD,KAAC,GAAG,CAAC,MAAM;YAAC,IAAI,EAAC,UAAU;YAAC,SAAS,EAAEC;UAAe,EAAG;QAAA;MAC3C;IACI;EACM,EACd;AAEpB"},"metadata":{},"sourceType":"module"}